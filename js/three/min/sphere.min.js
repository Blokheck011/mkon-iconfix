function initSphere(){function e(e){var r=e*(Math.PI/180);return r}scene=new THREE.Scene;var r=25,n=1,a=.1,t=2e4;camera=new THREE.PerspectiveCamera(r,n,a,t),scene.add(camera),camera.position.set(0,0,-300),camera.lookAt(scene.position),camera.rotation.z=0,renderer=Detector.webgl?new THREE.WebGLRenderer({antialias:!0}):new THREE.CanvasRenderer,renderer.setSize(300,300),container=document.getElementById("ThreeJS"),container.appendChild(renderer.domElement);var o=new THREE.PointLight(16777215);o.position.set(0,2e3,0),scene.add(o);var c=50,i=new THREE.SphereGeometry(c,60,60),E=(THREE.ImageUtils.loadTexture("img/navballTexture.png"),new THREE.Vector3(0,c,0)),s=new THREE.Vector3(.01,-c,0),d=new THREE.Vector3(-.01,-c,0),l=new THREE.Vector3(0,-c,.01),u=new THREE.Vector3(0,-c,-.01),h=new THREE.Vector3(c,0,0),v=new THREE.Vector3(-c,0,.01),T=new THREE.Vector3(-c,0,-.01);drawCurve(createSphereArc(E,s),new THREE.Color(255)),drawCurve(createSphereArc(E,d),new THREE.Color(255)),drawCurve(createSphereArc(E,l),new THREE.Color(16711680)),drawCurve(createSphereArc(E,u),new THREE.Color(16711680)),drawCurve(createSphereArc(h,v),new THREE.Color(65280)),drawCurve(createSphereArc(h,T),new THREE.Color(65280));for(var m=0;m<mesh2.geometry.vertices.length;m++){var w=mesh2.geometry.vertices[m].clone(),p=projectOntoMesh(w,sphere);drawLine(w,p,new THREE.Color(16763904),!0)}for(var R=[],m=0;m<mesh2.geometry.faces.length;m++){var H=mesh2.geometry.faces[m],g=H.a,y=H.b,f=H.c,C=mesh2.geometry.vertices[g],S=mesh2.geometry.vertices[y],A=mesh2.geometry.vertices[f];if(addEdgeToArray(R,[C,S]),addEdgeToArray(R,[S,A]),H instanceof THREE.Face3)addEdgeToArray(R,[A,C]);else{var M=H.d,L=mesh2.geometry.vertices[M];addEdgeToArray(R,[A,L]),addEdgeToArray(R,[L,C])}}for(var m=0;m<R.length;m++){var V=projectOntoMesh(R[m][0],sphere),q=projectOntoMesh(R[m][1],sphere);drawCurve(createSphereArc(V,q),new THREE.Color(16776960))}var b=new THREE.MeshLambertMaterial({color:8947848});this.sphere=new THREE.Mesh(i,b),scene.add(sphere),euler=new THREE.Euler(e(270),e(0),e(0),"ZXY"),sphere.rotation.copy(euler)}function edgeEquals(e,r){return e[0].equals(r[0])&&e[1].equals(r[1])||e[0].equals(r[1])&&e[1].equals(r[0])}function arrayContainsEdge(e,r){for(var n=0;n<e.length;n++)if(edgeEquals(e[n],r))return!0;return!1}function addEdgeToArray(e,r){arrayContainsEdge(e,r)||e.push(r)}function greatCircleFunction(e,r){var n=e.angleTo(r);return function(a){var t=(new THREE.Vector3).addVectors(e.clone().multiplyScalar(Math.sin((1-a)*n)),r.clone().multiplyScalar(Math.sin(a*n))).divideScalar(Math.sin(n));return t}}function createSphereArc(e,r){var n=new THREE.Curve;return n.getPoint=greatCircleFunction(e,r),n}function drawCurve(e,r){var n=new THREE.Geometry;n.vertices=e.getPoints(100),n.computeLineDistances();var a=new THREE.LineBasicMaterial;a.color=r;var t=new THREE.Line(n,a);scene.add(t)}function drawLine(e,r,n,a){var t=new THREE.Geometry;if(t.vertices.push(e,r),t.computeLineDistances(),void 0!==a&&a)var o=new THREE.LineDashedMaterial({dashSize:2,gapSize:2});else var o=new THREE.LineBasicMaterial;o.color=n;var c=new THREE.Line(t,o);scene.add(c)}function projectOntoMesh(e,r){var n=e.clone(),a=e.clone().multiplyScalar(-1),t=new THREE.Raycaster(n,a.normalize()),o=t.intersectObject(r);return o.length>0?o[0].point:null}function animate(){requestAnimationFrame(animate),render(),update()}function update(){}function render(){renderer.render(scene,camera)}var container,scene,camera,renderer,controls,stats,mesh;initSphere(),animate();